{"version":3,"sources":["components/Social.jsx","components/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Social","react_default","a","createElement","className","href","target","rel","Component","About","src","alt","style","marginTop","id","components_Social","App","components_About","react_tsparticles_default","options","particlesOptions","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4LAgCeA,mLA5BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KACEE,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAEJN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAEfH,EAAAC,EAAAC,cAAA,KACEE,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAEfH,EAAAC,EAAAC,cAAA,KACEE,KAAK,+BACLC,OAAO,SACPC,IAAI,uBAEJN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAvBFI,aC6BNC,mLA1BX,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKO,IAAI,eAAeC,IAAI,KAAKP,UAAU,aAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,gLAKAH,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CAAEC,UAAW,SACvBZ,EAAAC,EAAAC,cAAA,KACEW,GAAG,KACHV,UAAU,MACVC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBALN,iBAUFN,EAAAC,EAAAC,cAACY,EAAD,cAtBYP,sCCYLQ,MATf,WACE,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAWiB,QAASC,MCENC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP1B,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,WAAP,KACE3B,EAAAC,EAAAC,cAAC0B,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME","file":"static/js/main.61e3115f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Social extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"social\">\r\n        <a\r\n          href=\"https://www.linkedin.com/in/jonathan-yin/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-linkedin\" />\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/jonathanyin12\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-github\" />\r\n        </a>\r\n        <a\r\n          href=\"mailto:jonathan.yin@yale.edu\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fa fa-envelope\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Social;\r\n","import React, { Component } from \"react\";\r\nimport Social from \"./Social\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about-me\">\r\n        <img src=\"headshot.jpg\" alt=\"me\" className=\"headshot\" />\r\n        <h1 className=\"author\"> Jonathan Yin </h1>\r\n        <div className=\"desc\">\r\n          I'm an undergrad at Yale studying Computer Science and Statistics. My\r\n          interests broadly lie at the intersection of machine learning, data\r\n          science, and software development.\r\n        </div>\r\n        <div style={{ marginTop: \"15px\" }}>\r\n          <a\r\n            id=\"cv\"\r\n            className=\"btn\"\r\n            href=\"Jonathan_Yin_Resume.pdf\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Résumé\r\n          </a>\r\n        </div>\r\n        <Social />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About.jsx\";\nimport Particles from \"react-tsparticles\";\nimport particlesOptions from \"./particles.json\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <About />\n      <Particles options={particlesOptions} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}